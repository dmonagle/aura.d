module aura.log.json;

import vibe.core.log;
import elasticsearch.client;
import elasticsearch.parameters;
import elasticsearch.api.actions.base;
import elasticsearch.api.actions.indices;

/**
    Logger implementation for logging to an HTML file with dynamic filtering support.
*/
final class EsLogger : Logger {
    private {
        Client _esClient;
        string _containerName;
    }
    
    this(Client esClient, string containerName) {
        _esClient = esClient;
        _containerName = containerName;
    }
    
    @property void minLogLevel(vibe.core.log.LogLevel value) pure nothrow @safe { this.minLevel = value; }
    
    override void log(ref LogLine msg)
        @trusted // ???
    {
        auto logJson = Json.emptyObject;
        logJson.level = msg.level.to!string;
        logJson.time = msg.time.toISOExtString();
        logJson.file = msg.file;
        logJson.line = msg.line;
        if (msg.thread)
            logJson.thread = msg.threadName;

        try {
            auto messageJson = parseJsonString(msg.text);
            foreach(string key, value; messageJson) {
                logJson[key] = value;
            }
        }
        catch (JSONException e) {
            logJson.text = msg.text;
        }

        _esClient.index(_containerName, msg.level.to!string, logJson.toString());
    }
}
